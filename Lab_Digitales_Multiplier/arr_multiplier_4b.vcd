$date
	Thu May  5 10:44:33 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 8 ! Result [7:0] $end
$var reg 4 " A [3:0] $end
$var reg 4 # B [3:0] $end
$var reg 1 $ clk $end
$var reg 1 % rstn $end
$scope module arr $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 ( clk $end
$var wire 1 % rstn $end
$var wire 8 ) wResult [7:0] $end
$var wire 8 * wCarry [7:0] $end
$var reg 8 + Result [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bzxx +
bz0 *
bzxx )
z(
bx '
bx &
1%
0$
bx #
bx "
bzxx !
$end
#2
bz00 !
bz00 +
bz00 )
b10 #
b10 '
b1 "
b1 &
1$
#4
0$
#6
b1 #
b1 '
b10 "
b10 &
1$
#8
0$
#10
bz00 !
bz00 +
bz00 )
b10 #
b10 '
1$
